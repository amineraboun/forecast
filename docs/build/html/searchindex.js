Search.setIndex({"docnames": [".ipynb_checkpoints/forecast-checkpoint", ".ipynb_checkpoints/index-checkpoint", ".ipynb_checkpoints/model_select-checkpoint", ".ipynb_checkpoints/plotting-checkpoint", "forecast", "index", "model_select", "plotting"], "filenames": [".ipynb_checkpoints/forecast-checkpoint.rst", ".ipynb_checkpoints/index-checkpoint.rst", ".ipynb_checkpoints/model_select-checkpoint.rst", ".ipynb_checkpoints/plotting-checkpoint.rst", "forecast.rst", "index.rst", "model_select.rst", "plotting.rst"], "titles": ["Single Model: Main Classes", "Welcome to forecast\u2019s documentation!", "Model Combination", "Utils: Plotting Series", "Single Model: Main Classes", "Welcome to forecast\u2019s documentation!", "Model Combination", "Utils: Plotting Series"], "terms": {"class": [2, 5, 6], "forecast": [0, 2, 3, 4, 6, 7], "data": [0, 2, 3, 4, 6, 7], "depvar_str": [0, 4], "fh": [0, 2, 4, 6], "pct_initial_window": [0, 4], "step_length": [0, 4], "forecaster_nam": [0, 4], "naiv": [0, 4], "none": [0, 2, 3, 4, 6, 7], "exog_l": [0, 4], "freq": [0, 4], "b": [0, 4], "random_st": [0, 4], "0": [0, 2, 4, 6], "liquid": [0, 4], "manag": [0, 4], "evalu": [0, 2, 4, 6], "model": 5, "paramet": [0, 2, 3, 4, 6, 7], "datafram": [0, 2, 3, 4, 6, 7], "A": [0, 2, 4, 6], "contain": [0, 2, 3, 4, 6, 7], "input": [0, 4], "str": [0, 2, 3, 4, 6, 7], "The": [0, 2, 3, 4, 6, 7], "column": [0, 3, 4, 7], "name": [0, 2, 3, 4, 6, 7], "repres": [0, 4], "depend": [0, 4], "variabl": [0, 2, 4, 6], "int": [0, 2, 4, 6], "horizon": [0, 2, 4, 6], "i": [0, 2, 3, 4, 6, 7], "e": [0, 4], "number": [0, 2, 3, 4, 6, 7], "period": [0, 2, 4, 6], "ahead": [0, 4], "float": [0, 2, 4, 6], "percentag": [0, 4], "us": [0, 2, 3, 4, 6, 7], "initi": [0, 2, 4, 6], "train": [0, 4], "window": [0, 4], "step": [0, 4], "size": [0, 2, 4, 6], "expand": [0, 4], "cross": [0, 4], "valid": [0, 4], "option": [0, 2, 4, 6], "default": [0, 2, 3, 4, 6, 7], "object": [0, 2, 4, 6], "which": [0, 4], "correspond": [0, 4], "list": [0, 2, 3, 4, 6, 7], "exogen": [0, 2, 4, 6], "frequenc": [0, 4], "time": [0, 3, 4, 7], "seri": [0, 2, 4, 5, 6], "busi": [0, 4], "dai": [0, 4], "random": [0, 4], "state": [0, 4], "reproduc": [0, 4], "attribut": [0, 4], "y": [0, 2, 3, 4, 6, 7], "pd": [0, 2, 3, 4, 6, 7], "x": [0, 2, 4, 6], "ar": [0, 2, 4, 6], "forecastinghorizon": [0, 2, 4, 6], "initial_window": [0, 4], "cv": [0, 4], "expandingwindowsplitt": [0, 4], "x_train": [0, 4], "set": [0, 4], "x_test": [0, 4], "test": [0, 4], "y_train": [0, 4], "valu": [0, 2, 4, 6], "y_test": [0, 4], "is_fit": [0, 4], "bool": [0, 2, 4, 6], "true": [0, 2, 4, 6], "fit": [0, 2, 4, 6], "fals": [0, 2, 4, 6], "otherwis": [0, 4], "is_evalu": [0, 4], "r": [0, 4], "numpi": [0, 4], "randomst": [0, 4], "plot": [2, 5, 6], "forecastplot": [0, 4, 5], "an": [0, 2, 4, 6], "instanc": [0, 4], "util": [0, 4, 5], "out": [0, 2, 4, 6], "sampl": [0, 2, 4, 6], "return": [0, 2, 3, 4, 6, 7], "forecastev": [0, 4, 5], "result": [0, 4], "all": [0, 2, 4, 6], "comput": [0, 4], "insampl": [0, 4], "either": [0, 2, 4, 6], "By": [0, 4], "entir": [0, 4], "forecastfit": [0, 4, 5], "perform": [0, 2, 4, 6], "metric": [0, 2, 4, 6], "predict": [0, 2, 3, 4, 6, 7], "coverag": [0, 2, 4, 6], "9": [0, 2, 4, 6], "gener": [0, 2, 4, 6], "averag": [0, 2, 4, 6], "confid": [0, 3, 4, 7], "interv": [0, 2, 3, 4, 6, 7], "take": [0, 2, 4, 6], "defin": [0, 4], "instanti": [0, 2, 4, 6], "panda": [], "split_procedure_summari": [0, 4], "dict": [0, 2, 4, 6], "summari": [0, 2, 4, 6], "procedur": [0, 4], "dictionari": [0, 2, 4, 6], "detail": [0, 4], "includ": [0, 4], "fold": [0, 4], "length": [0, 3, 4, 7], "updat": [0, 2, 4, 6], "newdata": [0, 2, 4, 6], "refit": [0, 2, 4, 6], "cutoff": [0, 2, 4, 6], "new": [0, 2, 4, 6], "date": [0, 4], "possibl": [0, 4], "same": [0, 4], "origin": [0, 4], "If": [0, 2, 4, 6], "tupl": [0, 2, 4, 6], "summary_horizon": [0, 4], "per": [0, 2, 3, 4, 6, 7], "rmse": [0, 2, 4, 6], "mape": [0, 2, 4, 6], "each": [0, 2, 3, 4, 6, 7], "summary_result": [0, 4], "variou": [0, 2, 4, 6], "statist": [0, 4], "forecastevalplot": [0, 4, 5], "lfe": [0, 4], "plot_oos_horizon": [0, 4], "score": [0, 2, 4, 6], "xlabel": [0, 2, 3, 4, 6, 7], "ylabel": [0, 2, 3, 4, 6, 7], "titl": [0, 2, 3, 4, 6, 7], "ax": [0, 2, 3, 4, 6, 7], "figsiz": [0, 2, 3, 4, 6, 7], "15": [0, 2, 3, 4, 6, 7], "6": [0, 2, 3, 4, 6, 7], "should": [2, 6], "plot_oos_scor": [0, 4], "histor": [0, 4], "insample_perf": [0, 4], "insample_predict": [0, 4], "nsampl": [0, 4], "100": [0, 4], "forecastfitplot": [0, 4, 5], "lff": [0, 4], "plot_insample_perform": [0, 4], "y_pred": [0, 2, 4, 6], "y_pred_int": [0, 4], "lf": [0, 2, 4, 6], "plot_cv_procedur": [0, 4], "label": [0, 2, 3, 4, 6, 7], "plot_predict": [0, 2, 4, 6], "interval_label": [0, 2, 3, 4, 6, 7], "plot_prediction_tru": [0, 4], "y_true": [0, 4], "plot_train_test": [0, 4], "separ": [0, 4], "from": [0, 2, 3, 4, 6, 7], "summary_perf": [], "insample_result_df": [], "grouper": [], "y_true_col": [], "y_pred_col": [], "given": [2, 6], "group": [], "model_select": [2, 6], "forecastmodelselect": [2, 5, 6], "lf_list": [2, 6], "models_d": [2, 6], "mode": [2, 6], "nbest_average_horizon": [2, 6], "nbest": [2, 6], "2": [2, 6], "kwarg": [2, 6], "select": [2, 6], "comparison": [2, 6], "base": [2, 6], "how": [2, 6], "best": [2, 6], "combin": 5, "differ": [2, 6], "oo": [2, 6], "can": [2, 6], "wai": [2, 6], "method": [2, 6], "1": [2, 6], "requir": [2, 6], "It": [2, 6], "prefer": [2, 6], "have": [2, 6], "alreadi": [2, 6], "been": [2, 6], "argument": [2, 6], "taken": [2, 6], "plu": [2, 6], "where": [2, 6], "kei": [2, 6], "forecast_model": [2, 6], "common": [], "specifi": [2, 6], "aggreg": [2, 6], "best_horizon": [2, 6], "inverse_scor": [2, 6], "weight": [2, 6], "invers": [2, 6], "proport": [2, 6], "nbest_averag": [2, 6], "n": [2, 6], "analysi": [], "root": [], "mean": [], "squar": [], "error": [], "absolut": [], "when": [], "add_forecast": [2, 6], "add": [2, 6], "ad": [2, 6], "forc": [2, 6], "underli": [2, 6], "even": [2, 6], "indic": [], "oos_per_cutoff": [2, 6], "calcul": [2, 6], "enter": [2, 6], "plot_model_compar": [2, 6], "view": [2, 6], "axi": [0, 2, 3, 4, 6, 7], "empti": [2, 6], "string": [2, 6], "matplotlib": [2, 6], "_subplot": [2, 6], "axessubplot": [2, 6], "figur": [0, 2, 3, 4, 6, 7], "inch": [2, 6], "width": [2, 6], "height": [2, 6], "models_pr": [2, 6], "y_pred_interv": [2, 6], "aggregation_label": [2, 6], "agg": [2, 6], "ret_underli": [2, 6], "make": [2, 6], "select_best": [2, 6], "overal": [2, 6], "model_rank_perhorizon": [2, 6], "rank": [2, 6], "function": [2, 6], "them": [2, 6], "specif": [2, 6], "without": [2, 6], "again": [2, 6], "plot_seri": [3, 5, 7], "marker": [3, 7], "color": [3, 7], "pred_interv": [3, 7], "one": [3, 7], "more": [3, 7], "iter": [3, 7], "One": [3, 7], "displai": [3, 7], "legend": [3, 7], "point": [3, 7], "o": [3, 7], "ha": [3, 7], "match": [3, 7], "must": [3, 7], "text": [3, 7], "": [3, 7], "suptitl": [3, 7], "output": [3, 7], "predict_interv": [3, 7], "lower": [3, 7], "upper": [3, 7], "boundari": [3, 7], "fig": [3, 7], "plt": [0, 3, 4, 7], "sktime": [3, 7], "import": [3, 7], "dataset": [3, 7], "load_airlin": [3, 7], "index": [1, 5], "modul": [1, 5], "search": [1, 5], "page": [1, 5], "ani": [2, 6], "addit": [2, 6], "keyword": [2, 6], "pass": [2, 6], "assertionerror": [2, 6], "recogn": [2, 6], "do": [2, 6], "meet": [2, 6], "both": [2, 6], "avail": [2, 6], "rais": [2, 6], "exampl": [3, 7], "singl": 5, "main": 5}, "objects": {"forecast.forecast": [[4, 0, 1, "", "Forecast"], [4, 0, 1, "", "ForecastEval"], [4, 0, 1, "", "ForecastEvalPlot"], [4, 0, 1, "", "ForecastFit"], [4, 0, 1, "", "ForecastFitPlot"], [4, 0, 1, "", "ForecastPlot"]], "forecast.forecast.Forecast": [[4, 1, 1, "", "evaluate"], [4, 1, 1, "", "fit"], [4, 1, 1, "", "predict"], [4, 1, 1, "", "split_procedure_summary"], [4, 1, 1, "", "update"]], "forecast.forecast.ForecastEval": [[4, 1, 1, "", "summary_horizon"], [4, 1, 1, "", "summary_results"]], "forecast.forecast.ForecastEvalPlot": [[4, 1, 1, "", "plot_oos_horizon"], [4, 1, 1, "", "plot_oos_score"]], "forecast.forecast.ForecastFit": [[4, 1, 1, "", "insample_perf"], [4, 1, 1, "", "insample_predictions"]], "forecast.forecast.ForecastFitPlot": [[4, 1, 1, "", "plot_insample_performance"]], "forecast.forecast.ForecastPlot": [[4, 1, 1, "", "plot_cv_procedure"], [4, 1, 1, "", "plot_prediction"], [4, 1, 1, "", "plot_prediction_true"], [4, 1, 1, "", "plot_train_test"]], "forecast": [[6, 2, 0, "-", "model_select"]], "forecast.model_select": [[6, 0, 1, "", "ForecastModelSelect"]], "forecast.model_select.ForecastModelSelect": [[6, 1, 1, "", "add_forecast"], [6, 1, 1, "", "evaluate"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "oos_per_cutoff"], [6, 1, 1, "", "plot_model_compare"], [6, 1, 1, "", "plot_prediction"], [6, 1, 1, "", "predict"], [6, 1, 1, "", "select_best"], [6, 1, 1, "", "update"]], "forecast.utils": [[7, 2, 0, "-", "plotting"]], "forecast.utils.plotting": [[7, 3, 1, "", "plot_series"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"paramet": [], "return": [], "exampl": [], "welcom": [1, 5], "forecast": [1, 5], "": [1, 5], "document": [1, 5], "indic": [1, 5], "tabl": [1, 5], "attribut": [], "rais": [], "main": [0, 4], "class": [0, 4], "plot": [0, 3, 4, 7], "singl": [0, 4], "model": [0, 2, 4, 6], "combin": [2, 6], "util": [3, 7], "seri": [3, 7], "content": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"Single Model: Main Classes": [[0, "single-model-main-classes"], [4, "single-model-main-classes"]], "Single Model: Plot Classes": [[0, "single-model-plot-classes"], [4, "single-model-plot-classes"]], "Welcome to forecast\u2019s documentation!": [[1, "welcome-to-forecast-s-documentation"], [5, "welcome-to-forecast-s-documentation"]], "Indices and tables": [[1, "indices-and-tables"], [5, "indices-and-tables"]], "Model Combination": [[2, "module-forecast.model_select"], [6, "module-forecast.model_select"]], "Utils: Plotting Series": [[3, "module-forecast.utils.plotting"], [7, "module-forecast.utils.plotting"]], "Contents:": [[5, null]]}, "indexentries": {"forecast (class in forecast.forecast)": [[0, "forecast.forecast.Forecast"], [4, "forecast.forecast.Forecast"]], "forecasteval (class in forecast.forecast)": [[0, "forecast.forecast.ForecastEval"], [4, "forecast.forecast.ForecastEval"]], "forecastevalplot (class in forecast.forecast)": [[0, "forecast.forecast.ForecastEvalPlot"], [4, "forecast.forecast.ForecastEvalPlot"]], "forecastfit (class in forecast.forecast)": [[0, "forecast.forecast.ForecastFit"], [4, "forecast.forecast.ForecastFit"]], "forecastfitplot (class in forecast.forecast)": [[0, "forecast.forecast.ForecastFitPlot"], [4, "forecast.forecast.ForecastFitPlot"]], "forecastplot (class in forecast.forecast)": [[0, "forecast.forecast.ForecastPlot"], [4, "forecast.forecast.ForecastPlot"]], "evaluate() (forecast.forecast.forecast method)": [[0, "forecast.forecast.Forecast.evaluate"], [4, "forecast.forecast.Forecast.evaluate"]], "fit() (forecast.forecast.forecast method)": [[0, "forecast.forecast.Forecast.fit"], [4, "forecast.forecast.Forecast.fit"]], "insample_perf() (forecast.forecast.forecastfit method)": [[0, "forecast.forecast.ForecastFit.insample_perf"], [4, "forecast.forecast.ForecastFit.insample_perf"]], "insample_predictions() (forecast.forecast.forecastfit method)": [[0, "forecast.forecast.ForecastFit.insample_predictions"], [4, "forecast.forecast.ForecastFit.insample_predictions"]], "plot_cv_procedure() (forecast.forecast.forecastplot method)": [[0, "forecast.forecast.ForecastPlot.plot_cv_procedure"], [4, "forecast.forecast.ForecastPlot.plot_cv_procedure"]], "plot_insample_performance() (forecast.forecast.forecastfitplot method)": [[0, "forecast.forecast.ForecastFitPlot.plot_insample_performance"], [4, "forecast.forecast.ForecastFitPlot.plot_insample_performance"]], "plot_oos_horizon() (forecast.forecast.forecastevalplot method)": [[0, "forecast.forecast.ForecastEvalPlot.plot_oos_horizon"], [4, "forecast.forecast.ForecastEvalPlot.plot_oos_horizon"]], "plot_oos_score() (forecast.forecast.forecastevalplot method)": [[0, "forecast.forecast.ForecastEvalPlot.plot_oos_score"], [4, "forecast.forecast.ForecastEvalPlot.plot_oos_score"]], "plot_prediction() (forecast.forecast.forecastplot method)": [[0, "forecast.forecast.ForecastPlot.plot_prediction"], [4, "forecast.forecast.ForecastPlot.plot_prediction"]], "plot_prediction_true() (forecast.forecast.forecastplot method)": [[0, "forecast.forecast.ForecastPlot.plot_prediction_true"], [4, "forecast.forecast.ForecastPlot.plot_prediction_true"]], "plot_train_test() (forecast.forecast.forecastplot method)": [[0, "forecast.forecast.ForecastPlot.plot_train_test"], [4, "forecast.forecast.ForecastPlot.plot_train_test"]], "predict() (forecast.forecast.forecast method)": [[0, "forecast.forecast.Forecast.predict"], [4, "forecast.forecast.Forecast.predict"]], "split_procedure_summary() (forecast.forecast.forecast method)": [[0, "forecast.forecast.Forecast.split_procedure_summary"], [4, "forecast.forecast.Forecast.split_procedure_summary"]], "summary_horizon() (forecast.forecast.forecasteval method)": [[0, "forecast.forecast.ForecastEval.summary_horizon"], [4, "forecast.forecast.ForecastEval.summary_horizon"]], "summary_results() (forecast.forecast.forecasteval method)": [[0, "forecast.forecast.ForecastEval.summary_results"], [4, "forecast.forecast.ForecastEval.summary_results"]], "update() (forecast.forecast.forecast method)": [[0, "forecast.forecast.Forecast.update"], [4, "forecast.forecast.Forecast.update"]], "forecastmodelselect (class in forecast.model_select)": [[2, "forecast.model_select.ForecastModelSelect"], [6, "forecast.model_select.ForecastModelSelect"]], "add_forecast() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.add_forecast"], [6, "forecast.model_select.ForecastModelSelect.add_forecast"]], "evaluate() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.evaluate"], [6, "forecast.model_select.ForecastModelSelect.evaluate"]], "fit() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.fit"], [6, "forecast.model_select.ForecastModelSelect.fit"]], "forecast.model_select": [[2, "module-forecast.model_select"], [6, "module-forecast.model_select"]], "module": [[2, "module-forecast.model_select"], [3, "module-forecast.utils.plotting"], [6, "module-forecast.model_select"], [7, "module-forecast.utils.plotting"]], "oos_per_cutoff() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.oos_per_cutoff"], [6, "forecast.model_select.ForecastModelSelect.oos_per_cutoff"]], "plot_model_compare() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.plot_model_compare"], [6, "forecast.model_select.ForecastModelSelect.plot_model_compare"]], "plot_prediction() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.plot_prediction"], [6, "forecast.model_select.ForecastModelSelect.plot_prediction"]], "predict() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.predict"], [6, "forecast.model_select.ForecastModelSelect.predict"]], "select_best() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.select_best"], [6, "forecast.model_select.ForecastModelSelect.select_best"]], "update() (forecast.model_select.forecastmodelselect method)": [[2, "forecast.model_select.ForecastModelSelect.update"], [6, "forecast.model_select.ForecastModelSelect.update"]], "forecast.utils.plotting": [[3, "module-forecast.utils.plotting"], [7, "module-forecast.utils.plotting"]], "plot_series() (in module forecast.utils.plotting)": [[3, "forecast.utils.plotting.plot_series"], [7, "forecast.utils.plotting.plot_series"]]}})